
// Import the required dependencies
import React, { Component } from "react";
import "./App.css";

// Initial Data
const initialState = [
  { id: '101', name: "Ranjan", age: 20 },
  { id: '102', name: "Bhote", age: 20 },
  { id: '103', name: "Bholey", age: 19 }
];

// App Functional Component (Root Component)
function App() {
  // Use the useState hook to initialize the studentData state with the initialState array
  const [studentData, setStudentData] = React.useState(initialState);

  // handleDeleteStudent function to remove a student from the studentData array
  function handleDeleteStudent(id) {
    // Use the spread operator and filter method to update the studentData array with a new array that excludes the student with the specified id
    setStudentData(prevState => prevState.filter(student => student.id !== id));
  }

  return (
    <div className="App">
      <h1>Student App</h1>
      {/* Render the StudentList component and pass the studentData array and the handleDeleteStudent function as props */}
      <StudentList studentData={studentData} handleDeleteStudent={handleDeleteStudent} />
    </div>
  );
}

// StudentList Functional Component
function StudentList(props) {
  // handleDelete function to call the handleDeleteStudent function in the parent component
  function handleDelete(id) {
    props.handleDeleteStudent(id);
  }

  // Map through the studentData array and render a list item for each student
  const studentList = props.studentData.map(student => (
    <li key={student.id}>
      student ID: {student.id}
      name: {student.name}
      age: {student.age}
      {/* Add an edit button /}
<button>edit</button>
{/ Call the handleDelete function when the delete button is clicked */}
      <button onClick={() => handleDelete(student.id)}>delete</button>
    </li>
  ));

  return (
    <div>
      <div>Student List:</div>
      <ul>{studentList}</ul>
    </div>
  );
}

export default App;

---**---
// This one is done in different way
 // handleDeleteStudent function to remove a student from the studentData array
  handleDeleteStudent = (id) => {
    // Use setState to update the studentData array with a new array that excludes the student with the specified id
    this.setState({ studentData: this.state.studentData.filter(student => student.id !== id) });
  }
  
  /*
Here are some best practices to follow for the given code:

Use functional components instead of class components wherever possible, as functional components are easier to read, write, and test.

Keep the code organized and modular by breaking it down into smaller, reusable components.

Use descriptive variable and function names to make the code easier to understand.

Use comments to explain any complex or unclear code.

Use destructuring to extract the necessary values from props and state.

Use arrow functions for event handlers to avoid issues with this binding.

Use key prop when rendering a list of items to improve performance and avoid warnings.

Use a linter to enforce consistent code style and formatting.
  */
